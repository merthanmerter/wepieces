name: wepieces_v1_0_0

services:
  reverse-proxy:
    image: traefik:v3.1
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # - --entrypoints.websecure.address=:443
      # - --certificatesresolvers.myresolver.acme.tlschallenge=true
      # - --certificatesresolvers.myresolver.acme.email=${SUPERADMIN_EMAIL}
      # - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      # - --entrypoints.
    env_file: .env
    environment:
      SUPERADMIN_EMAIL: ${SUPERADMIN_EMAIL}

  app:
    build: .
    env_file: .env
    environment:
      DATABASE_HOST: database
      REDIS_HOST: redis
    expose:
      - 5000
    deploy:
      mode: replicated
      replicas: ${REPLICAS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${HOST}`)"
      - "traefik.http.services.app.loadbalancer.server.port=5000"
      # - "traefik.http.routers.app.entrypoints=websecure"
      # - "traefik.http.routers.app.tls.certresolver=myresolver"
    restart: always
    depends_on:
      - database
      - redis

  database:
    image: postgres
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_SCHEMA}
    restart: always
    user: postgres
    volumes:
      - database:/var/lib/postgresql/data
    # ports:
    #   - "5432:5432"
    # expose:
    #   - 5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${SUPERADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${SUPERADMIN_PASSWORD}
    restart: always
    ports:
      - "5050:80"
    depends_on:
      - database
    volumes:
      - pgadmin:/var/lib/pgadmin

  redis:
    image: "redis:6-alpine"
    # ports:
    #   - "6379:6379"
    volumes:
      - redisdata:/data
    restart: always

volumes:
  database:
  pgadmin:
  redisdata:
